
<?//Общее
ini_get — Получает значение настройки конфигурации
ini_set — Установка значения настройки конфигурации 
empty - Проверяет, пуста ли переменная
iconv('windows-1251', 'utf-8', $p) - Преобразование кодировки
while($i < 9){
	$i++;
	if($i == 5)
		continue; - пропуск итераций;
		break; - прерывает весь цыкл;
}
function($name="Guest", $age="none") - Передача параметров поумолчанию( т.е можно не передавать и наобарот)
static $cnt = 0; - Статическая переменная
time() - Возвращает метку времени

//Cookie
	setcookie("name", "value", time()+64645) - Создание кук
	setcookie("name", "value", time()+1) - Удаление кук
	$_COOKIE['name'] - Чтение кук;

//	Функций
settype() - Присваивает переменной новый тип
isset() - Определяет, была ли установлена переменная значением отличным от NULL
•get_class() - Возвращает имя класса, к которому принадлежит объект
•is_array() - Определяет, является ли переменная массивом
•is_bool() - Проверяет, является ли переменная булевой
•is_callable() - Проверяет, может ли значение переменной быть вызвано в качестве функции
•is_float() - Проверяет, является ли переменная числом с плавающей точкой
•is_int() - Проверяет, является ли переменная переменной целочисленного типа
•is_null() - Проверяет, является ли значение переменной равным NULL
•is_numeric() - Проверяет, является ли переменная числом или строкой, содержащей число
•is_object() - Проверяет, является ли переменная объектом
•is_resource() - Проверяет, является ли переменная ресурсом
•is_scalar() - Проверяет, является ли переменная скалярным значением
•is_string() - Проверяет, является ли переменная строкой
•function_exists() - Возвращает TRUE, если указанная функция определена
•method_exists() - Проверяет, существует ли метод в данном классе

func_get_arg() -  Возвращает элемент из списка аргументов
func_get_args('array') — Возвращает массив, содержащий аргументы функции
func_num_args('int') — Возвращает количество аргументов, переданных функции


// Строки
strlen($p) - Считает количесто Байт в строке
iconv_strlen — Возвращает количество символов в строке
explode(" ", $pizza); - Разбивает строку с помощью разделителя
preg_split("/[\s,]+/", "hypertext language, programming"); - Разбивает строку с помошью регулярных выражений
str_replace("world","Peter","Hello world!"); - Заменяет "world" на "Peter"(4 Параметр подсчитывает количество замен)
?>
<?// Массивы
count($arr) — Подсчитывает количество элементов массива или что-то в объекте
list($a, $b) - Раскидывает массивы по переменным
unset($arr[2]) - Удаление массива
array_keys — Возвращает все или некоторое подмножество ключей массива
array_key_exists('first', $search_array); - Проверяет, присутствует ли в массиве указанный ключ или индекс
array_shift — Извлекает первый элемент массива
implode(",", $array); — Объединяет элементы массива в строку
?>
<?// Файлы
if(file_exists("file.txt"))
	{ echo "Файл или директория если существует"} - Проверка файлов и директорий на существование
$f = fopen("file.txt", "r+"); - Открытие потока на чтение или запись.("a", "a+", "w", "w+")
fclose($f) - Закрывает файл
fread ($f, 5) - Читает файл по байтам ("Первые 5 байтов")
fgets($f) - Читает по строчно в массив
fgetss($f, 1024, "<p><br>") - Читает по строчно вырезая теги
fgetc($f) - Читает по байтам
fputs($f, "\nНовая строка") - Пишет в конце строки
fseek($f, -10, SEEK_END); - Устанавливает указатель в нужную позицию
ftell($f); - Указывает позицию в которой ты находишься
rewind($f); - Устанавливает указатель в начало потока
readfile("file.txt") - Читает на прямую всесь файл
file("file.txt"); - Читает по строчно в массив
$file = file_get_contents("file.txt"); - Получаем весь файл в виде строки
file_put_contents("file.txt", "Новое содержимое", FILE_APPEND); - Пишем файл добавляя содержимое в конец
copy("source.txt", "destination.txt"); - Копируем
rename("old.txt", "new.txt"); - Переименовываем файл
unlink("file-to delete.txt"); - Удаляем файл
?>
<?//Директорий
mkdir Создаёт директорий
rmdir Удаляет директорий - Удаляет если папка пуста
getcwd Возвращяет имя текущего директорий
opendir Открывает директорию //-(двойной клик папки)-
closedir Зарывает поток, связанный с каталогом
readdir Возвращает имя следующего по порядку элемента каталога
is_file(string $filename) Возвращает TRUE, если там файл 
is_dir(string $filename) Возвращает TRUE, если там директория 
glob(*.txt) - Читаем определённые файлы в дерикторий
move_uploaded_file ($_FILES["userfile"]["tmp_name"],
							"upload/" $_FILES["userfile"]["name"]); - Загрузка файла
?>
<?//База данных Mysql
SELECT - Выбрать
FROM - Из
{ Условия, операторы
	ORDER BY name - Сортировать
	WHERE length > 30 - Значение Где
	AND title - Значение И
	LIKE 'Web%' - Выбрать "Web" а так же то что будет до или после "%"
	DISTINCT lenght - Выборка уникальных значений
}
{ Объединение таблицы
	SELECT t.name, t.code, l.course - Выбрать name, code, course
		FROM teachers t - Из таблицы teachrs
	(LEFT)JOIN lessons l ON t.id = l.tid - Объеденяя с таблицы lessons ГДе id = tid	
}
INSERT INTO corses - Вставка новой записи
	VALUES (NULL, 'PHP', '...', 40) - Значение по порядку во всех колонок
UPDATE teachers - Изменение записи в таблице teachers
	SET - Имя поля
		zarplata = zarplata * 2
	WHERE name LIKE 'Иванов%'
		or name LIKE 'Петров%'

SHOW DATABASES; Посмотреть БД
SHOW TABLES; Посмотреть таблицы
USE; Выбрать БД
DESCRIBE table; Выбрать таблицу
SET NAMES cp1251; Менять кодировку
CREATE DATABASE [IF NOT EXISTS] db_name - Создать базу если не существует
DROP DATABASE db_dame - Удалить базу
?>
<?//Сервер БД MySQL
$link = mysql_connect('localhost', 'root', '', 'BD'); - Соединение с БазД
if (!$link){echo 'Ошибка: '
 . mysqli_connect_error} - Вывод ошибок соедидений
mysqli_select_db($link, 'test'); - Выбераем другую БД
mysqli_close($link); Закрываем соединение
mysqli_query($link, 'Запрос'); Посылаем запрос ( Результат True или False)( А если запрос на SELECT то Object или False)
mysqli_error($link) - Вывод ошибок при исполнений запроса
mysqli_fetch_array($result, MYSQLI_ASSOC) - Обработка результата в массивы
mysqli_fetch_all($result, MYSQLI_ASSOC) - Обработка результата в массивы ( Массив в массиве)
{ Полезные функций
mysqli_real_escape_string($link, "O' Brain") - Экранирует строки
$id = mysqli_insert_id($link); - Получаем первичный ключ новой записи(над сразу после запроса)
$row_count mysqli_num_rows($result) - Сколько записей вернулось
$fields_count = mysqli_num_fields($result) - Сколько полей в вернувшихся записях
}
$stmt = mysqli_prepare($link, $sql); - Сервер, препарь мне подготовленный запрос
mysqli_stmt_bind_param($stmt, 'ssi' $name, $email, $age); - Сервер, вот тебе параметры запроса
mysqli_stmt_execute($stmt); А теперь исполни подготовленный запрос с переданным параметрами
mysqli_stmt_close($stmt);
mysqli_free_result — Освобождает память от результата запроса
?>
<?//ООП PHP
	this->func() - Возвращает то, где он сидит
	__FUNCTION__ - Вернёт имя функций
	__CLASS__ - Вернёт имя класса
	__METHOD__ - вернёт КЛАСС :: МЕТОД
	extends - Унаследовать от 
	implements - Реализовать от (interface)
		parent :: func(); - перегрузка родителя
	throw new Exception('Ошибка! Укажите модель!') - Улов Ошибок	
	abstract class - Абстрактный класс ( 'чертёж' )
	interface - Абстрактный класс Только с Абстрактными методами
	instanceOf - Проверка на наличие (boolen)
	__construct() - Конструкция постоянного исполнения ( исполняется при созданий)
	__destruct() - исполняется перед удалением.
	__clone () - Клонирование
	__autoload() - Если класс не найден
	__toString() - Приводит объект к строке
  __set($name, $value) - При назначений Неизвесного свойства (Назначить)
  __get($name) - При вызове неизвесного свойства (Увидеть)
	__call($name, $args) - Неизвесный метод
	__callStatic($name, $args) - Неизвесный статический метод
	__invoke($p1, $p2) - При вызове объекта как метода ( echo $obj("as", 5); )
	__sleep() - Вызывается перед сериализацией
	__wakeup() - Вызывается после сериализации

?>
<?//Новое
strpos("Строка1", "Строка 2") - находит позицию первого вхождения строки внутри другой строки
$SERVER['REQUEST_METHOD'] - POST
$SERVER['REQUEST_URI'] - /tasa.php?login=2&age=23
$SERVER['SCRIPT_NAME'] - /tasa.php
$SERVER['QUERY_STRING'] - login=2&age=23
$SERVER['PHP_SELF'] - Имя файла скрипта, который сейчас выполняется, относительно корня документов. 
echo '<pre>'.print_r($_POST,true).'</pre>'; - Проверка Поста
echo '<pre>'. print_r($_REQUEST).'</pre>'; - Проверка запроса